// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(cuid())
  email            String          @unique
  passwordHash     String
  defaultCurrency  Currency        @default(CAD)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  transactions     Transaction[]
  portfolioSnapshots PortfolioSnapshot[]
  
  @@map("users")
}

model Transaction {
  id          String        @id @default(cuid())
  userId      String
  symbol      String        // Stock symbol (e.g., "AAPL", "TSLA")
  type        TransactionType
  quantity    Float
  price       Float
  currency    Currency
  date        DateTime      @default(now())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model ExchangeRate {
  id           String   @id @default(cuid())
  fromCurrency Currency
  toCurrency   Currency
  rate         Float
  timestamp    DateTime @default(now())
  
  @@unique([fromCurrency, toCurrency, timestamp])
  @@map("exchange_rates")
}

enum TransactionType {
  BUY
  SELL
  DEPOSIT    // Cash deposit
  WITHDRAWAL // Cash withdrawal
}

enum Currency {
  CAD
  USD
}

model PortfolioSnapshot {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime
  totalValue Decimal @db.Decimal(15, 2)
  currency  String   @default("CAD")
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, date]) // One snapshot per day per user
  @@index([userId, date])
}

model AssetPrice {
  id        String   @id @default(cuid())
  symbol    String
  price     Decimal  @db.Decimal(15, 4)
  currency  String   @default("USD")
  timestamp DateTime @default(now())
  source    String   @default("alphavantage") // API source
  
  @@unique([symbol, timestamp])
  @@index([symbol])
}

model TickerSymbol {
  id          String   @id @default(cuid())
  symbol      String   @unique
  name        String
  exchange    String?
  type        String?  // "stock", "etf", "fund", etc.
  currency    String?
  country     String?
  sector      String?
  industry    String?
  marketCap   BigInt?
  isActive    Boolean  @default(true)
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  
  @@index([symbol])
  @@index([exchange])
  @@index([type])
  @@index([isActive])
}
